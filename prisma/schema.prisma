generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Account {
  id          Int       @id @default(autoincrement())
  username    String    @unique(map: "UQ__Account__F3DBC572C75CC4AB") @db.Char(10)
  password    String    @db.Char(60)
  email       String    @unique(map: "UQ__Account__AB6E6164824D0AA4") @db.VarChar(50)
  personnelID Int       @unique(map: "UQ__Account__57D5B02380BF231E")
  Personnel   Personnel @relation(fields: [personnelID], references: [id], map: "FK_Account_Personnel")
}

model AppointmentRequest {
  id              Int      @id @default(autoincrement())
  appointmentTime DateTime
  requestTime     DateTime
  note            String?  @db.NVarChar(255)
  patientName     String   @db.NVarChar(50)
  patientPhone    String   @db.Char(10)
  categoryName    String   @db.NVarChar(50)
}

model Category {
  id               Int                @id @default(autoincrement())
  code             String             @unique(map: "UQ__Category__357D4CF90E58FFC7") @db.Char(3)
  name             String             @db.NVarChar(50)
  description      String?            @db.NVarChar(255)
  Procedure        Procedure[]
  TreatmentSession TreatmentSession[]
}

model Day {
  id       Int        @id @default(autoincrement())
  day      String     @unique(map: "UQ__Day__D8779320E0685A11") @db.Char(3)
  Schedule Schedule[]
}

model Drug {
  id           Int            @id @default(autoincrement())
  code         String         @unique(map: "UQ__Drug__357D4CF9F6DA43C7") @db.Char(17)
  name         String         @db.VarChar(50)
  description  String?        @db.NVarChar(255)
  price        Int
  Prescription Prescription[]
}

model ExaminationSession {
  id                   Int                    @id
  Session              Session                @relation(fields: [id], references: [id], onUpdate: NoAction, map: "FK_ExaminationSession_Session")
  ReExaminationSession ReExaminationSession[]
}

model Patient {
  id                   Int             @id
  drugContraindication String?         @db.NVarChar(500)
  allergyStatus        String?         @db.NVarChar(255)
  nationalID           String          @unique(map: "UQ__Patient__B5881E88434C54AC") @db.Char(12)
  name                 String          @db.NVarChar(50)
  dob                  DateTime?       @db.Date
  gender               String?         @db.Char(1)
  phone                String          @unique(map: "UQ__Patient__B43B145F889CDFA6") @db.Char(10)
  PaymentRecord        PaymentRecord[]
  Session              Session[]
}

model PaymentRecord {
  id                 Int              @id @default(autoincrement())
  date               DateTime         @db.Date
  total              Int
  paid               Int
  change             Int
  method             String?          @db.Char(1)
  patientID          Int
  treatmentSessionID Int              @unique(map: "UQ__PaymentR__8DF2A23F6732B5CC")
  Patient            Patient          @relation(fields: [patientID], references: [id], map: "FK_PaymentRecord_Patient")
  TreatmentSession   TreatmentSession @relation(fields: [treatmentSessionID], references: [id], map: "FK_PaymentRecord_TreatmentSession")
}

model Prescription {
  drugID             Int
  treatmentSessionID Int
  note               String?          @db.NVarChar(500)
  Drug               Drug             @relation(fields: [drugID], references: [id], map: "FK_Prescription_Drug")
  TreatmentSession   TreatmentSession @relation(fields: [treatmentSessionID], references: [id], map: "FK_Prescription_TreatmentSession")

  @@id([drugID, treatmentSessionID])
}

model Procedure {
  id          Int      @id @default(autoincrement())
  code        String   @unique(map: "UQ__Procedur__357D4CF9C8EE5B2F") @db.Char(3)
  name        String   @db.NVarChar(50)
  description String?  @db.NVarChar(500)
  fee         Int
  categoryID  Int
  Category    Category @relation(fields: [categoryID], references: [id], onDelete: Cascade, map: "FK_Procedure_Category")
}

model ReExaminationSession {
  id                   Int                @id
  relatedExaminationID Int
  ExaminationSession   ExaminationSession @relation(fields: [relatedExaminationID], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_ReExaminationSession_ExaminationSession")
  Session              Session            @relation(fields: [id], references: [id], onUpdate: NoAction, map: "FK_ReExaminationSession_Session")
}

model Room {
  id      Int       @id @default(autoincrement())
  code    String    @unique(map: "UQ__Room__357D4CF9F3DCEE65") @db.Char(6)
  name    String    @db.VarChar(50)
  Session Session[]
}

model Schedule {
  dayID     Int
  dentistID Int
  Day       Day       @relation(fields: [dayID], references: [id], onUpdate: NoAction, map: "FK_Schedule_Day")
  Dentist   Personnel @relation(fields: [dentistID], references: [id], map: "FK_Schedule_Dentist")

  @@id([dayID, dentistID])
}

model Session {
  id                                       Int                   @id @default(autoincrement())
  time                                     DateTime
  note                                     String?
  status                                   String?               @default("SCH", map: "DF__Session__status__46E78A0C") @db.Char(3)
  patientID                                Int
  roomID                                   Int
  dentistID                                Int
  assistantID                              Int?
  type                                     String                @db.Char(3)
  ExaminationSession                       ExaminationSession?
  ReExaminationSession                     ReExaminationSession?
  Patient                                  Patient               @relation(fields: [patientID], references: [id], onUpdate: NoAction, map: "FK_Session_Patient")
  Assistant Personnel?            @relation("Session_assistantIDToPersonnel", fields: [assistantID], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Session_Personnel_assistantID")
  Dentist   Personnel             @relation("Session_dentistIDToPersonnel", fields: [dentistID], references: [id], onUpdate: NoAction, map: "FK_Session_Personnel_dentistID")
  Room                                     Room                  @relation(fields: [roomID], references: [id], onUpdate: NoAction, map: "FK_Session_Room")
  TreatmentSession                         TreatmentSession?
}

model Tooth {
  id           Int            @id @default(autoincrement())
  type         String         @unique(map: "UQ__Tooth__E3F85248CA9F3E88") @db.Char(1)
  name         String         @db.VarChar(50)
  ToothSession ToothSession[]
}

model ToothSession {
  toothID            Int
  treatmentSessionID Int
  order              Int
  Tooth              Tooth            @relation(fields: [toothID], references: [id], map: "FK_ToothSession_Tooth")
  TreatmentSession   TreatmentSession @relation(fields: [treatmentSessionID], references: [id], map: "FK_ToothSession_TreatmentSession")

  @@id([toothID, treatmentSessionID, order])
}

model TreatmentSession {
  id            Int            @id
  healthNote    String?
  description   String?
  categoryID    Int
  PaymentRecord PaymentRecord?
  Prescription  Prescription[]
  ToothSession  ToothSession[]
  Category      Category       @relation(fields: [categoryID], references: [id], map: "FK_TreatmentSession_Category")
  Session       Session        @relation(fields: [id], references: [id], onUpdate: NoAction, map: "FK_TreatmentSession_Session")
}

model Personnel {
  id                                     Int        @id @default(autoincrement())
  nationalID                             String     @unique(map: "UQ__Personne__B5881E889E6D6824") @db.Char(12)
  name                                   String     @db.NVarChar(50)
  dob                                    DateTime?  @db.Date
  gender                                 String?    @db.Char(1)
  phone                                  String     @unique(map: "UQ__Personne__B43B145F8AAA5415") @db.Char(10)
  type                                   String     @db.Char(3)
  Account                                Account?
  Schedule                               Schedule[]
  SessionOfAssistant Session[]  @relation("Session_assistantIDToPersonnel")
  SessionOfDentist   Session[]  @relation("Session_dentistIDToPersonnel")
}
