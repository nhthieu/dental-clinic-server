generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Account {
  id         Int      @id @default(autoincrement())
  username   String   @unique(map: "UQ__Account__F3DBC572BE56DDA6") @db.Char(10)
  password   String   @db.Char(60)
  email      String   @unique(map: "UQ__Account__AB6E61640B138356") @db.VarChar(50)
  role       String   @db.Char(3)
  personelID Int      @unique(map: "UQ__Account__C0E7528C62705DA6")
  Personel   Personel @relation(fields: [personelID], references: [id], map: "FK_Account_Personel")
}

model AppointmentRequest {
  id              Int      @id @default(autoincrement())
  appointmentTime DateTime
  requestTime     DateTime
  note            String?  @db.NVarChar(255)
  patientName     String   @db.NVarChar(50)
  patientPhone    String   @db.Char(10)
}

model Assistant {
  id      Int       @id
  Dentist Dentist   @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_Assistant_Dentist")
  Session Session[]
}

model Category {
  id               Int                @id @default(autoincrement())
  code             String             @unique(map: "UQ__Category__357D4CF97352C395") @db.Char(3)
  name             String             @db.NVarChar(50)
  description      String?            @db.NVarChar(255)
  Procedure        Procedure[]
  TreatmentSession TreatmentSession[]
}

model Day {
  id       Int        @id @default(autoincrement())
  day      String     @unique(map: "UQ__Day__D8779320CB7C3086") @db.Char(3)
  Schedule Schedule[]
}

model Dentist {
  id        Int        @id
  Assistant Assistant?
  Personel  Personel   @relation(fields: [id], references: [id], onUpdate: NoAction, map: "FK_Dentist_Personel")
  Schedule  Schedule[]
  Session   Session[]
}

model Drug {
  id           Int            @id @default(autoincrement())
  code         String         @unique(map: "UQ__Drug__357D4CF99DB17F31") @db.Char(17)
  name         String         @db.VarChar(50)
  description  String?        @db.NVarChar(255)
  price        Int
  Prescription Prescription[]
}

model ExaminationSession {
  id                   Int                    @id
  Session              Session                @relation(fields: [id], references: [id], onUpdate: NoAction, map: "FK_ExaminationSession_Session")
  ReExaminationSession ReExaminationSession[]
}

model Patient {
  id                   Int             @id
  drugContraindication String?         @db.NVarChar(500)
  oralHealthStatus     String?         @db.NVarChar(500)
  allergyStatus        String?         @db.NVarChar(255)
  Personel             Personel        @relation(fields: [id], references: [id], map: "FK_Patient_Personel")
  PaymentRecord        PaymentRecord[]
  Session              Session[]
}

model PaymentRecord {
  id                 Int              @id @default(autoincrement())
  date               DateTime         @db.Date
  total              Int
  paid               Int?             @default(0, map: "DF__PaymentRec__paid__48CFD27E")
  change             Int?             @default(0, map: "DF__PaymentRe__chang__49C3F6B7")
  method             String?          @db.Char(1)
  patientID          Int
  treatmentSessionID Int              @unique(map: "UQ__PaymentR__8DF2A23F1983C3E8")
  Patient            Patient          @relation(fields: [patientID], references: [id], map: "FK_PaymentRecord_Patient")
  TreatmentSession   TreatmentSession @relation(fields: [treatmentSessionID], references: [id], map: "FK_PaymentRecord_TreatmentSession")
}

model Personel {
  id         Int       @id @default(autoincrement())
  nationalId String    @unique(map: "UQ__Personel__B5881EE8A67DDA81") @db.Char(12)
  name       String    @db.NVarChar(50)
  dob        DateTime? @db.Date
  gender     String?   @db.Char(1)
  phone      String    @unique(map: "UQ__Personel__B43B145FD512FE34") @db.Char(10)
  Account    Account?
  Dentist    Dentist?
  Patient    Patient?
  Staff      Staff?
}

model Prescription {
  drugID             Int
  treatmentSessionID Int
  note               String?          @db.NVarChar(500)
  Drug               Drug             @relation(fields: [drugID], references: [id], map: "FK_Prescription_Drug")
  TreatmentSession   TreatmentSession @relation(fields: [treatmentSessionID], references: [id], map: "FK_Prescription_TreatmentSession")

  @@id([drugID, treatmentSessionID])
}

model Procedure {
  id          Int      @id @default(autoincrement())
  code        String   @unique(map: "UQ__Procedur__357D4CF95CA1A16B") @db.Char(3)
  name        String   @db.NVarChar(50)
  description String?  @db.NVarChar(500)
  fee         Int
  categoryID  Int
  Category    Category @relation(fields: [categoryID], references: [id], onDelete: Cascade, map: "FK_Procedure_Category")
}

model ReExaminationSession {
  id                   Int                @id
  relatedExaminationID Int
  ExaminationSession   ExaminationSession @relation(fields: [relatedExaminationID], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_ReExaminationSession_ExaminationSession")
  Session              Session            @relation(fields: [id], references: [id], onUpdate: NoAction, map: "FK_ReExaminationSession_Session")
}

model Room {
  id      Int       @id @default(autoincrement())
  code    String    @unique(map: "UQ__Room__357D4CF9CED8D6E3") @db.Char(6)
  name    String    @db.VarChar(50)
  Session Session[]
}

model Schedule {
  dayID     Int
  dentistID Int
  Day       Day     @relation(fields: [dayID], references: [id], onUpdate: NoAction, map: "FK_Schedule_Day")
  Dentist   Dentist @relation(fields: [dentistID], references: [id], onUpdate: NoAction, map: "FK_Schedule_Dentist")

  @@id([dayID, dentistID])
}

model Session {
  id                   Int                   @id @default(autoincrement())
  time                 DateTime
  note                 String?
  status               String?               @default("do", map: "DF__Session__status__4CA06362") @db.VarChar(6)
  patientID            Int
  assistantID          Int?
  dentistID            Int
  roomID               Int
  ExaminationSession   ExaminationSession?
  ReExaminationSession ReExaminationSession?
  Assistant            Assistant?            @relation(fields: [assistantID], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Session_Assistant")
  Dentist              Dentist               @relation(fields: [dentistID], references: [id], onUpdate: NoAction, map: "FK_Session_Dentist")
  Patient              Patient               @relation(fields: [patientID], references: [id], onUpdate: NoAction, map: "FK_Session_Patient")
  Room                 Room                  @relation(fields: [roomID], references: [id], onUpdate: NoAction, map: "FK_Session_Room")
  TreatmentSession     TreatmentSession?
}

model Staff {
  id       Int      @id
  Personel Personel @relation(fields: [id], references: [id], map: "FK_Staff_Personel")
}

model Tooth {
  id           Int            @id @default(autoincrement())
  type         String         @unique(map: "UQ__Tooth__E3F85248A067FFC3") @db.Char(1)
  name         String         @db.VarChar(50)
  ToothSession ToothSession[]
}

model ToothSession {
  toothID            Int
  treatmentSessionID Int
  order              Int
  Tooth              Tooth            @relation(fields: [toothID], references: [id], map: "FK_ToothSession_Tooth")
  TreatmentSession   TreatmentSession @relation(fields: [treatmentSessionID], references: [id], map: "FK_ToothSession_TreatmentSession")

  @@id([toothID, treatmentSessionID, order])
}

model TreatmentSession {
  id            Int            @id
  healthNote    String?
  description   String?
  categoryID    Int
  PaymentRecord PaymentRecord?
  Prescription  Prescription[]
  ToothSession  ToothSession[]
  Category      Category       @relation(fields: [categoryID], references: [id], map: "FK_TreatmentSession_Category")
  Session       Session        @relation(fields: [id], references: [id], onUpdate: NoAction, map: "FK_TreatmentSession_Session")
}
